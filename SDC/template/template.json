{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerName": {
      "type": "String"
    },
    "location": {
      "type": "String"
    },
    "containerURI": {
      "type": "String"
    },
    "imageRegistryLoginServer": {
      "type": "String",
      "defaultValue": ""
    },
    "imageUsername": {
      "type": "String",
      "defaultValue": ""
    },
    "imagePassword": {
      "type": "secureString",
      "defaultValue": ""
    },
    "osType": {
      "allowedValues": [
        "Linux",
        "Windows"
      ],
      "type": "String"
    },
    "numberCores": {
      "type": "String"
    },
    "memory": {
      "type": "String"
    },
    "dnsLabel": {
      "defaultValue": "",
      "type": "String"
    },
    "ports": {
      "defaultValue": "80",
      "type": "String"
    },
    "ports2": {
      "defaultValue": "",
      "type": "String"
    },
    "ports3": {
      "defaultValue": "",
      "type": "String"
    },
    "hasPort2": {
      "type": "bool"
    },
    "hasPort3": {
      "type": "bool"
    },
    "containerType": {
      "type": "String",
      "allowedValues": [
        "publicImage-publicIP",
        "publicImage-privateIP",
        "privateImage-publicIP",
        "privateImage-privateIP"
      ]
    },
    "commands": {
      "defaultValue": "none",
      "type": "String"
    },
    "environmentVariable": {
      "defaultValue": "\"null1\":0",
      "type": "String"
    },
    "environmentVariable2": {
      "defaultValue": "\"null2\":0",
      "type": "String"
    },
    "environmentVariable3": {
      "defaultValue": "\"null3\":0",
      "type": "String"
    },
    "hasEnvironmentVariable": {
      "type": "bool"
    },
    "hasEnvironmentVariable2": {
      "type": "bool"
    },
    "hasEnvironmentVariable3": {
      "type": "bool"
    },
    "restartPolicy": {
      "type": "String"
    },
    "azure-file-volume-account-name": {
      "type": "String"
    },
    "azure-file-volume-account-key": {
      "type": "String"
    }
  },
  "variables": {
    "APIversion": "2018-04-01",
    "containerName": "[parameters('containerName')]",
    "location": "[parameters('location')]",
    "_bothPublic": "[equals(parameters('containerType'),'publicImage-publicIP')]",
    "_publicImageOnly": "[equals(parameters('containerType'),'publicImage-privateIP')]",
    "_publicIPOnly": "[equals(parameters('containerType'),'privateImage-publicIP')]",
    "_bothPrivate": "[equals(parameters('containerType'),'privateImage-privateIP')]",
    "containerURI": "[parameters('containerURI')]",
    "imageRegistryLoginServer": "[parameters('imageRegistryLoginServer')]",
    "imageUsername": "[parameters('imageUsername')]",
    "imagePassword": "[parameters('imagePassword')]",
    "osType": "[parameters('osType')]",
    "numberCores": "[int(parameters('numberCores'))]",
    "memory": "[float(parameters('memory'))]",
    "dnsLabel": "[parameters('dnsLabel')]",
    "port": "[parameters('ports')]",
    "ports": "[if(and(parameters('hasPort2'), parameters('hasPort3')), createArray(json(parameters('ports')), json(parameters('ports2')), json(parameters('ports3'))), if(parameters('hasPort2'), createArray(json(parameters('ports')), json(parameters('ports2'))), if(parameters('hasPort3'), createArray(json(parameters('ports')), json(parameters('ports3'))), createArray(json(parameters('ports'))))))]",
    "commands": "[if(equals(parameters('commands'), 'none'), take(createArray(''), 0), split(parameters('commands'), ', '))]",
    "environmentVariable": "[json(concat('{\"name\":  ', substring(parameters('environmentVariable'), 0, indexof(parameters('environmentVariable'), ':')), ', \"value\": ', substring(parameters('environmentVariable'), add(indexof(parameters('environmentVariable'), ':'), 1), sub(length(parameters('environmentVariable')), add(indexof(parameters('environmentVariable'), ':'), 1))), '}'))]",
    "environmentVariable2": "[json(concat('{\"name\":  ', substring(parameters('environmentVariable2'), 0, indexof(parameters('environmentVariable2'), ':')), ', \"value\": ', substring(parameters('environmentVariable2'), add(indexof(parameters('environmentVariable2'), ':'), 1), sub(length(parameters('environmentVariable2')), add(indexof(parameters('environmentVariable2'), ':'), 1))), '}'))]",
    "environmentVariable3": "[json(concat('{\"name\":  ', substring(parameters('environmentVariable3'), 0, indexof(parameters('environmentVariable3'), ':')), ', \"value\": ', substring(parameters('environmentVariable3'), add(indexof(parameters('environmentVariable3'), ':'), 1), sub(length(parameters('environmentVariable3')), add(indexof(parameters('environmentVariable3'), ':'), 1))), '}'))]",
    "EVall": "[createArray(variables('environmentVariable'), variables('environmentVariable2'), variables('environmentVariable3'))]",
    "EV12": "[createArray(variables('environmentVariable'), variables('environmentVariable2'))]",
    "EV13": "[createArray(variables('environmentVariable'), variables('environmentVariable3'))]",
    "EV23": "[createArray(variables('environmentVariable2'), variables('environmentVariable3'))]",
    "EV1": "[createArray(variables('environmentVariable'))]",
    "EV2": "[createArray(variables('environmentVariable2'))]",
    "EV3": "[createArray(variables('environmentVariable3'))]",
    "EV": "[if(and(parameters('hasEnvironmentVariable'), parameters('hasEnvironmentVariable2'), parameters('hasEnvironmentVariable3')), variables('EVall'), if(and(parameters('hasEnvironmentVariable'), parameters('hasEnvironmentVariable2')), variables('EV12'), if(and(parameters('hasEnvironmentVariable'), parameters('hasEnvironmentVariable3')), variables('EV13'), if(and(parameters('hasEnvironmentVariable2'), parameters('hasEnvironmentVariable3')), variables('EV23'), if(parameters('hasEnvironmentVariable'), variables('EV1'), if(parameters('hasEnvironmentVariable2'), variables('EV2'), if(parameters('hasEnvironmentVariable3'), variables('EV3'), take(createArray(''), 0))))))))]",
    "restartPolicy": "[parameters('restartPolicy')]",
    "name1": "[if(variables('_bothPublic'), parameters('containerName'), 'container1')]",
    "name2": "[if(variables('_publicImageOnly'), parameters('containerName'), 'container2')]",
    "name3": "[if(variables('_publicIPOnly'), parameters('containerName'), 'container3')]",
    "name4": "[if(variables('_bothPrivate'), parameters('containerName'), 'container4')]",
    "azure-file-volume-account-name": "[parameters('azure-file-volume-account-name')]",
    "azure-file-volume-account-key": "[parameters('azure-file-volume-account-key')]"
  },
  "resources": [
    {
      "condition": "[variables('_bothPublic')]",
      "name": "[variables('name1')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "[variables('APIversion')]",
      "location": "[variables('location')]",
      "properties": {
        "containers": [
          {
            "name": "[variables('containerName')]",
            "properties": {
              "image": "[variables('containerURI')]",
              "command": "[variables('commands')]",
              "environmentVariables": "[variables('EV')]",
              "ports": "[variables('ports')]",
              "resources": {
                "requests": {
                  "cpu": "[variables('numberCores')]",
                  "memoryInGb": "[variables('memory')]"
                },
              },
              "volumeMounts": [{
                  "name": "data",
                  "mountPath": "/data"
                },
                {
                  "name": "etc",
                  "mountPath": "/etc"
                  }
              ]
            }
          }
        ],
        "restartPolicy": "[variables('restartPolicy')]",
        "osType": "[variables('osType')]",
        "volumes": [
          {
            "name": "data",
            "azureFile": {
              "shareName": "data",
              "storageAccountName": "[variables('azure-file-volume-account-name')]",
              "storageAccountKey": "[variables('azure-file-volume-account-key')]"
            }
        },
        {
            "name": "etc",
            "azureFile": {
              "shareName": "etc",
              "storageAccountName": "[variables('azure-file-volume-account-name')]",
              "storageAccountKey": "[variables('azure-file-volume-account-key')]"
            }
        }],
        "ipAddress": {
          "type": "Public",
          "dnsNameLabel": "[variables('dnsLabel')]",
          "ports": "[variables('ports')]"
        }

      }
    },
    {
      "condition": "[variables('_publicImageOnly')]",
      "name": "[variables('name2')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "[variables('APIversion')]",
      "location": "[variables('location')]",
      "properties": {
        "containers": [
          {
            "name": "[variables('containerName')]",
            "properties": {
              "image": "[variables('containerURI')]",
              "command": "[variables('commands')]",
              "environmentVariables": "[variables('EV')]",
              "resources": {
                "requests": {
                  "cpu": "[variables('numberCores')]",
                  "memoryInGb": "[variables('memory')]"
                }
              }
            }
          }
        ],
        "restartPolicy": "[variables('restartPolicy')]",
        "osType": "[variables('osType')]",
        "volumes": [
          {
            "name": "data",
            "azureFile": {
              "shareName": "data",
              "storageAccountName": "[variables('azure-file-volume-account-name')]",
              "storageAccountKey": "[variables('azure-file-volume-account-key')]"
            }
        },
        {
            "name": "etc",
            "azureFile": {
              "shareName": "etc",
              "storageAccountName": "[variables('azure-file-volume-account-name')]",
              "storageAccountKey": "[variables('azure-file-volume-account-key')]"
            }
        }
      ]
    }
  },
  {
    "condition": "[variables('_publicIPOnly')]",
    "name": "[variables('name3')]",
    "type": "Microsoft.ContainerInstance/containerGroups",
    "apiVersion": "[variables('APIversion')]",
    "location": "[variables('location')]",
    "properties": {
      "containers": [
        {
          "name": "[variables('containerName')]",
          "properties": {
            "image": "[variables('containerURI')]",
            "command": "[variables('commands')]",
            "environmentVariables": "[variables('EV')]",
            "ports": "[variables('ports')]",
            "resources": {
              "requests": {
                "cpu": "[variables('numberCores')]",
                "memoryInGb": "[variables('memory')]"
              }
            }
          }
        }
      ],
      "restartPolicy": "[variables('restartPolicy')]",
      "osType": "[variables('osType')]",
      "volumes": [
        {
          "name": "data",
          "azureFile": {
            "shareName": "data",
            "storageAccountName": "[variables('azure-file-volume-account-name')]",
            "storageAccountKey": "[variables('azure-file-volume-account-key')]"
          }
      },
      {
          "name": "etc",
          "azureFile": {
            "shareName": "etc",
            "storageAccountName": "[variables('azure-file-volume-account-name')]",
            "storageAccountKey": "[variables('azure-file-volume-account-key')]"
          }
      }],
      "ipAddress": {
        "type": "Public",
        "dnsNameLabel": "[variables('dnsLabel')]",
        "ports": "[variables('ports')]"
      },
      "imageRegistryCredentials": [
        {
          "server": "[parameters('imageRegistryLoginServer')]",
          "username": "[parameters('imageUsername')]",
          "password": "[parameters('imagePassword')]"
        }
      ]
    }
  },
  {
    "condition": "[variables('_bothPrivate')]",
    "name": "[variables('name4')]",
    "type": "Microsoft.ContainerInstance/containerGroups",
    "apiVersion": "[variables('APIversion')]",
    "location": "[variables('location')]",
    "properties": {
      "containers": [
        {
          "name": "[variables('containerName')]",
          "properties": {
            "image": "[variables('containerURI')]",
            "command": "[variables('commands')]",
            "environmentVariables": "[variables('EV')]",
            "resources": {
              "requests": {
                "cpu": "[variables('numberCores')]",
                "memoryInGb": "[variables('memory')]"
              }
            }
          }
        }
      ],
      "restartPolicy": "[variables('restartPolicy')]",
      "osType": "[variables('osType')]",
      "imageRegistryCredentials": [
        {
          "server": "[parameters('imageRegistryLoginServer')]",
          "username": "[parameters('imageUsername')]",
          "password": "[parameters('imagePassword')]"
        }
      ]
    }
  }
],
"outputs": {}
}
